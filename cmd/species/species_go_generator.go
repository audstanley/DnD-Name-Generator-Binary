package species
// This code is generated by cmd/generator/generator.go. DO NOT EDIT.


import (
	"fmt"
	"math/rand"
	"time"
    "os"

	"github.com/spf13/cobra"
)

type Name struct {
    First string
    Last string
    Special string
    Location string
    Gender string
}

type GenericSpecies struct {
	GlobalVariableName string   `mapstructure:"global_variable_name"`
	FirstFNames        []string `mapstructure:"first_f_names"`
	FirstMNames        []string `mapstructure:"first_m_names"`
	FirstNBNames       []string `mapstructure:"first_nb_names"`
	FirstNames         []string `mapstructure:"first_names"`
	LastNames          []string `mapstructure:"last_names"`
	SpecialNames       []string `mapstructure:"special_names"`
	LocationNames      []string `mapstructure:"location_names"`
    FullName           Name
}

func (species GenericSpecies) GetFirstAndLastByGender(p Print) (string, error) {
    // Seed the random number generator
    // Use a new source for randomness (recommended)
    source := rand.NewSource(time.Now().UnixNano())
    random := rand.New(source)

    // Check if the list is less than 100
    if len(species.LastNames) == 0 {
        if p.Female && len(species.FirstFNames) == 0 {
            fmt.Printf("FirstFNames for %s List is less than 100\n", species.GlobalVariableName)
        } else if p.Male && len(species.FirstMNames) == 0 {
            fmt.Printf("FirstMNames for %s List is less than 100\n", species.GlobalVariableName)
        } else if p.Nonbinary && len(species.FirstNBNames) == 0 {
            fmt.Printf("FirstNBNames for %s List is less than 100\n", species.GlobalVariableName)
        }
        fmt.Printf("LastNames for %s List is less than 100\n", species.GlobalVariableName)
        os.Exit(1)
        return "", fmt.Errorf("LastNames for %s List is less than 100", species.GlobalVariableName)
    } else if len(species.FirstFNames) == 0 && p.Female {
        fmt.Printf("FirstFNames for %s List is less than 100\n", species.GlobalVariableName)
        os.Exit(1)
        return "", fmt.Errorf("FirstFNames for %s List is less than 100", species.GlobalVariableName)
    } else if len(species.FirstMNames) == 0 && p.Male{
        fmt.Printf("FirstMNames for %s List is less than 100\n", species.GlobalVariableName)
        os.Exit(1)
        return "", fmt.Errorf("FirstMNames for %s List is less than 100", species.GlobalVariableName)
    } else if len(species.FirstNBNames) == 0 && p.Nonbinary{
        fmt.Printf("FirstNBNames for %s List is less than 100\n", species.GlobalVariableName)
        os.Exit(1)
        return "", fmt.Errorf("FirstNBNames for %s List is less than 100", species.GlobalVariableName)
    }
    if p.Female {
        index1 := random.Intn(len(species.FirstFNames))
        index2 := random.Intn(len(species.LastNames))
        for index1 == index2 {
            index2 = random.Intn(len(species.LastNames))
        }
        species.FullName.First = species.FirstFNames[index1]
        species.FullName.Last = species.LastNames[index2]
        species.FullName.Gender = "female"
        return "", nil
    } else if p.Male {
        index1 := random.Intn(len(species.FirstMNames))
        index2 := random.Intn(len(species.LastNames))
        for index1 == index2 {
            index2 = random.Intn(len(species.LastNames))
        }
        species.FullName.First = species.FirstMNames[index1]
        species.FullName.Last = species.LastNames[index2]
        species.FullName.Gender = "male"
        return "", nil
    } else if p.Nonbinary {
        index1 := random.Intn(len(species.FirstNBNames))
        index2 := random.Intn(len(species.LastNames))
        for index1 == index2 {
            index2 = random.Intn(len(species.LastNames))
        }
        species.FullName.First = species.FirstNBNames[index1]
        species.FullName.Last = species.LastNames[index2]
        species.FullName.Gender = "nonbinary"
        return "", nil
    }

    // Check special and location flags from Print struct before assigning values
    if p.SpecialFlag {
        if len(species.SpecialNames) > 100 {
            index := random.Intn(len(species.SpecialNames))
            species.FullName.Special = species.SpecialNames[index]
        } else {
            return "", fmt.Errorf("SpecialNames for %s List is less than 100", species.GlobalVariableName)
        }
    }
    if p.LocationFlag {
        if len(species.LocationNames) > 100 {
            index := random.Intn(len(species.LocationNames))
            species.FullName.Location = species.LocationNames[index]
        } else {
            return "", fmt.Errorf("LocationNames for %s List is less than 100", species.GlobalVariableName)
        }
    }
    return "", fmt.Errorf("Somthing went wrong when processing the names")
}

// GetLocationOfOrigin returns a random location name
func (species GenericSpecies) GetLocationOfOrigin() (string, error) {
    if len(species.LocationNames) > 100 {
        // Seed the random number generator
        // Use a new source for randomness (recommended)
        source := rand.NewSource(time.Now().UnixNano())
        random := rand.New(source)
        index := random.Intn(len(species.LocationNames))
        return species.LocationNames[index], nil
    } else {
        return "", fmt.Errorf("LocationNames for %s List is less than 100", species.GlobalVariableName)
    }
}

// GetSpecialName for species
func (species GenericSpecies) GetSpecialName() (string, error) {
    if len(species.SpecialNames) > 100 {
        // Seed the random number generator
        // Use a new source for randomness (recommended)
        source := rand.NewSource(time.Now().UnixNano())
        random := rand.New(source)
        index := random.Intn(len(species.SpecialNames))
        return species.SpecialNames[index], nil
    } else {
        return "", fmt.Errorf("SpecialNames for %s List is less than 100", species.GlobalVariableName)
    }
}

func (species GenericSpecies) GetRandomFirstAndLastName(cmd *cobra.Command) error {
	// Seed the random number generator
	// Use a new source for randomness (recommended)
	source := rand.NewSource(time.Now().UnixNano())
	random := rand.New(source)

	// Pick five random indices
    if len(species.FirstFNames) > 100 && len(species.FirstMNames) > 100 && len(species.FirstNBNames) > 100 && len(species.LastNames) > 100 {
        index1 := random.Intn(len(species.FirstFNames))
        index2 := random.Intn(len(species.FirstMNames))
        index3 := random.Intn(len(species.FirstNBNames))
        index4 := random.Intn(len(species.LastNames))

        // Ensure indices are unique (avoid duplicates)
        for index1 == index4 {
            index2 = random.Intn(len(species.LastNames))
        }
        for index2 == index4 {
            index2 = random.Intn(len(species.LastNames))
        }
        for index3 == index4 {
            index2 = random.Intn(len(species.LastNames))
        }
        firstNames := []string{species.FirstFNames[index1], species.FirstMNames[index2], species.FirstNBNames[index3]}
        gender := []string{"female", "male", "nonbinary"}
        index5 := random.Intn(len(firstNames))

        fmt.Printf("%s: %s %s\n", gender[index5], firstNames[index5], species.LastNames[index2])
    } else {
        fmt.Printf("FirstFNames, FirstMNames, FirstNBNames, or LastNames for %s List is less than 100\n", cmd.Name())
    }
	return nil
}

var Aarakocra struct{ GenericSpecies }
var Aasimar struct{ GenericSpecies }
var Autognome struct{ GenericSpecies }
var Bugbear struct{ GenericSpecies }
var Centaur struct{ GenericSpecies }
var Changeling struct{ GenericSpecies }
var Dhampir struct{ GenericSpecies }
var Dragonborn struct{ GenericSpecies }
var Dwarf struct{ GenericSpecies }
var Elf struct{ GenericSpecies }
var Fairy struct{ GenericSpecies }
var Firbolg struct{ GenericSpecies }
var Genasi struct{ GenericSpecies }
var Giff struct{ GenericSpecies }
var Gith struct{ GenericSpecies }
var Gnome struct{ GenericSpecies }
var Goblin struct{ GenericSpecies }
var Goliath struct{ GenericSpecies }
var HalfElf struct{ GenericSpecies }
var HalfOrc struct{ GenericSpecies }
var Halfling struct{ GenericSpecies }
var Harengon struct{ GenericSpecies }
var Hexblood struct{ GenericSpecies }
var Hobgoblin struct{ GenericSpecies }
var Human struct{ GenericSpecies }
var Kalashtar struct{ GenericSpecies }
var Kender struct{ GenericSpecies }
var Kenku struct{ GenericSpecies }
var Kobold struct{ GenericSpecies }
var Leonin struct{ GenericSpecies }
var Lexodon struct{ GenericSpecies }
var Lizardfolk struct{ GenericSpecies }
var Minotaur struct{ GenericSpecies }
var Orc struct{ GenericSpecies }
var Owlin struct{ GenericSpecies }
var Plasmoid struct{ GenericSpecies }
var Reborn struct{ GenericSpecies }
var Satyr struct{ GenericSpecies }
var Shifter struct{ GenericSpecies }
var SimicHybrid struct{ GenericSpecies }
var Tabaxi struct{ GenericSpecies }
var ThriKreen struct{ GenericSpecies }
var Tiefling struct{ GenericSpecies }
var Tortle struct{ GenericSpecies }
var Triton struct{ GenericSpecies }
var Vendalken struct{ GenericSpecies }


var LocationNames []string

func (species GenericSpecies) Init() {
    Aarakocra.GlobalVariableName = "Aarakocra"
    Aasimar.GlobalVariableName = "Aasimar"
    Autognome.GlobalVariableName = "Autognome"
    Bugbear.GlobalVariableName = "Bugbear"
    Centaur.GlobalVariableName = "Centaur"
    Changeling.GlobalVariableName = "Changeling"
    Dhampir.GlobalVariableName = "Dhampir"
    Dragonborn.GlobalVariableName = "Dragonborn"
    Dwarf.GlobalVariableName = "Dwarf"
    Elf.GlobalVariableName = "Elf"
    Fairy.GlobalVariableName = "Fairy"
    Firbolg.GlobalVariableName = "Firbolg"
    Genasi.GlobalVariableName = "Genasi"
    Giff.GlobalVariableName = "Giff"
    Gith.GlobalVariableName = "Gith"
    Gnome.GlobalVariableName = "Gnome"
    Goblin.GlobalVariableName = "Goblin"
    Goliath.GlobalVariableName = "Goliath"
    HalfElf.GlobalVariableName = "HalfElf"
    HalfOrc.GlobalVariableName = "HalfOrc"
    Halfling.GlobalVariableName = "Halfling"
    Harengon.GlobalVariableName = "Harengon"
    Hexblood.GlobalVariableName = "Hexblood"
    Hobgoblin.GlobalVariableName = "Hobgoblin"
    Human.GlobalVariableName = "Human"
    Kalashtar.GlobalVariableName = "Kalashtar"
    Kender.GlobalVariableName = "Kender"
    Kenku.GlobalVariableName = "Kenku"
    Kobold.GlobalVariableName = "Kobold"
    Leonin.GlobalVariableName = "Leonin"
    Lexodon.GlobalVariableName = "Lexodon"
    Lizardfolk.GlobalVariableName = "Lizardfolk"
    Minotaur.GlobalVariableName = "Minotaur"
    Orc.GlobalVariableName = "Orc"
    Owlin.GlobalVariableName = "Owlin"
    Plasmoid.GlobalVariableName = "Plasmoid"
    Reborn.GlobalVariableName = "Reborn"
    Satyr.GlobalVariableName = "Satyr"
    Shifter.GlobalVariableName = "Shifter"
    SimicHybrid.GlobalVariableName = "SimicHybrid"
    Tabaxi.GlobalVariableName = "Tabaxi"
    ThriKreen.GlobalVariableName = "ThriKreen"
    Tiefling.GlobalVariableName = "Tiefling"
    Tortle.GlobalVariableName = "Tortle"
    Triton.GlobalVariableName = "Triton"
    Vendalken.GlobalVariableName = "Vendalken"

    Aarakocra.FirstFNames = []string{  }
    Aasimar.FirstFNames = []string{  }
    Autognome.FirstFNames = []string{  }
    Bugbear.FirstFNames = []string{  }
    Centaur.FirstFNames = []string{  }
    Changeling.FirstFNames = []string{  }
    Dhampir.FirstFNames = []string{  }
    Dragonborn.FirstFNames = []string{  }
    Dwarf.FirstFNames = []string{  }
    Elf.FirstFNames = []string{  }
    Fairy.FirstFNames = []string{  }
    Firbolg.FirstFNames = []string{  }
    Genasi.FirstFNames = []string{  }
    Giff.FirstFNames = []string{  }
    Gith.FirstFNames = []string{  }
    Gnome.FirstFNames = []string{  }
    Goblin.FirstFNames = []string{  }
    Goliath.FirstFNames = []string{  }
    HalfElf.FirstFNames = []string{  }
    HalfOrc.FirstFNames = []string{  }
    Halfling.FirstFNames = []string{  }
    Harengon.FirstFNames = []string{  }
    Hexblood.FirstFNames = []string{  }
    Hobgoblin.FirstFNames = []string{  }
    Human.FirstFNames = []string{  }
    Kalashtar.FirstFNames = []string{  }
    Kender.FirstFNames = []string{  }
    Kenku.FirstFNames = []string{  }
    Kobold.FirstFNames = []string{  }
    Leonin.FirstFNames = []string{  }
    Lexodon.FirstFNames = []string{  }
    Lizardfolk.FirstFNames = []string{  }
    Minotaur.FirstFNames = []string{  }
    Orc.FirstFNames = []string{  }
    Owlin.FirstFNames = []string{  }
    Plasmoid.FirstFNames = []string{  }
    Reborn.FirstFNames = []string{  }
    Satyr.FirstFNames = []string{  }
    Shifter.FirstFNames = []string{  }
    SimicHybrid.FirstFNames = []string{  }
    Tabaxi.FirstFNames = []string{  }
    ThriKreen.FirstFNames = []string{  }
    Tiefling.FirstFNames = []string{  }
    Tortle.FirstFNames = []string{  }
    Triton.FirstFNames = []string{  }
    Vendalken.FirstFNames = []string{  }

    Aarakocra.FirstMNames = []string{  }
    Aasimar.FirstMNames = []string{  }
    Autognome.FirstMNames = []string{  }
    Bugbear.FirstMNames = []string{  }
    Centaur.FirstMNames = []string{  }
    Changeling.FirstMNames = []string{  }
    Dhampir.FirstMNames = []string{  }
    Dragonborn.FirstMNames = []string{  }
    Dwarf.FirstMNames = []string{  }
    Elf.FirstMNames = []string{  }
    Fairy.FirstMNames = []string{  }
    Firbolg.FirstMNames = []string{  }
    Genasi.FirstMNames = []string{  }
    Giff.FirstMNames = []string{  }
    Gith.FirstMNames = []string{  }
    Gnome.FirstMNames = []string{  }
    Goblin.FirstMNames = []string{  }
    Goliath.FirstMNames = []string{  }
    HalfElf.FirstMNames = []string{  }
    HalfOrc.FirstMNames = []string{  }
    Halfling.FirstMNames = []string{  }
    Harengon.FirstMNames = []string{  }
    Hexblood.FirstMNames = []string{  }
    Hobgoblin.FirstMNames = []string{  }
    Human.FirstMNames = []string{  }
    Kalashtar.FirstMNames = []string{  }
    Kender.FirstMNames = []string{  }
    Kenku.FirstMNames = []string{  }
    Kobold.FirstMNames = []string{  }
    Leonin.FirstMNames = []string{  }
    Lexodon.FirstMNames = []string{  }
    Lizardfolk.FirstMNames = []string{  }
    Minotaur.FirstMNames = []string{  }
    Orc.FirstMNames = []string{  }
    Owlin.FirstMNames = []string{  }
    Plasmoid.FirstMNames = []string{  }
    Reborn.FirstMNames = []string{  }
    Satyr.FirstMNames = []string{  }
    Shifter.FirstMNames = []string{  }
    SimicHybrid.FirstMNames = []string{  }
    Tabaxi.FirstMNames = []string{  }
    ThriKreen.FirstMNames = []string{  }
    Tiefling.FirstMNames = []string{  }
    Tortle.FirstMNames = []string{  }
    Triton.FirstMNames = []string{  }
    Vendalken.FirstMNames = []string{  }

    Aarakocra.FirstNBNames = []string{  }
    Aasimar.FirstNBNames = []string{  }
    Autognome.FirstNBNames = []string{  }
    Bugbear.FirstNBNames = []string{  }
    Centaur.FirstNBNames = []string{  }
    Changeling.FirstNBNames = []string{  }
    Dhampir.FirstNBNames = []string{  }
    Dragonborn.FirstNBNames = []string{  }
    Dwarf.FirstNBNames = []string{  }
    Elf.FirstNBNames = []string{  }
    Fairy.FirstNBNames = []string{  }
    Firbolg.FirstNBNames = []string{  }
    Genasi.FirstNBNames = []string{  }
    Giff.FirstNBNames = []string{  }
    Gith.FirstNBNames = []string{  }
    Gnome.FirstNBNames = []string{  }
    Goblin.FirstNBNames = []string{  }
    Goliath.FirstNBNames = []string{  }
    HalfElf.FirstNBNames = []string{  }
    HalfOrc.FirstNBNames = []string{  }
    Halfling.FirstNBNames = []string{  }
    Harengon.FirstNBNames = []string{  }
    Hexblood.FirstNBNames = []string{  }
    Hobgoblin.FirstNBNames = []string{  }
    Human.FirstNBNames = []string{  }
    Kalashtar.FirstNBNames = []string{  }
    Kender.FirstNBNames = []string{  }
    Kenku.FirstNBNames = []string{  }
    Kobold.FirstNBNames = []string{  }
    Leonin.FirstNBNames = []string{  }
    Lexodon.FirstNBNames = []string{  }
    Lizardfolk.FirstNBNames = []string{  }
    Minotaur.FirstNBNames = []string{  }
    Orc.FirstNBNames = []string{  }
    Owlin.FirstNBNames = []string{  }
    Plasmoid.FirstNBNames = []string{  }
    Reborn.FirstNBNames = []string{  }
    Satyr.FirstNBNames = []string{  }
    Shifter.FirstNBNames = []string{  }
    SimicHybrid.FirstNBNames = []string{  }
    Tabaxi.FirstNBNames = []string{  }
    ThriKreen.FirstNBNames = []string{  }
    Tiefling.FirstNBNames = []string{  }
    Tortle.FirstNBNames = []string{  }
    Triton.FirstNBNames = []string{  }
    Vendalken.FirstNBNames = []string{  }

    Aarakocra.LastNames = []string{  }
    Aasimar.LastNames = []string{  }
    Autognome.LastNames = []string{  }
    Bugbear.LastNames = []string{  }
    Centaur.LastNames = []string{  }
    Changeling.LastNames = []string{  }
    Dhampir.LastNames = []string{  }
    Dragonborn.LastNames = []string{ "Clethinthiallor", "Daardemdroam", "Delmirev", "Drachedandion", "Fenkenkabradon", "Kepeshkmolik", "Kerrhylon", "Kimbatuul", "Linxakasendalor", "Myastan", "Nemmonis", "Norixius", "Ophinshtalajiir", "Prexijandilin", "Shestendeliath", "Turnuroth", "Verthisathurgiesh", "Yarjerit",  }
    Dwarf.LastNames = []string{ "Balderk", "Battlehammer", "Brawnanvil", "Dankil", "Fireforge", "Frostbeard", "Gorunn", "Holderhek", "Ironfist", "Loder", "Lutgehr", "Rumnaheim", "Strakeln", "Torunn", "Ungart",  }
    Elf.LastNames = []string{ "Amakir", "Amastacia", "Galanodel", "Holimion", "Ilphelkiir", "Liadon", "Meliamne", "Nailo", "Siannodel", "Xiloscient",  }
    Fairy.LastNames = []string{  }
    Firbolg.LastNames = []string{  }
    Genasi.LastNames = []string{  }
    Giff.LastNames = []string{  }
    Gith.LastNames = []string{  }
    Gnome.LastNames = []string{ "Beren", "Daergel", "Folkor", "Garrick", "Murnig", "Nackle", "Ningel", "Raulnor", "Scheppen", "Timbers", "Turen",  }
    Goblin.LastNames = []string{  }
    Goliath.LastNames = []string{  }
    HalfElf.LastNames = []string{  }
    HalfOrc.LastNames = []string{  }
    Halfling.LastNames = []string{ "Brushgather", "Goodbarrel", "Greenbottle", "High-hill", "Hilltopple", "Leagallow", "Tealeaf", "Thorngage", "Tosscobble", "Underbough",  }
    Harengon.LastNames = []string{  }
    Hexblood.LastNames = []string{  }
    Hobgoblin.LastNames = []string{  }
    Human.LastNames = []string{  }
    Kalashtar.LastNames = []string{  }
    Kender.LastNames = []string{  }
    Kenku.LastNames = []string{  }
    Kobold.LastNames = []string{ "Arix", "Eks", "Ett", "Galax", "Garu", "Hagnar", "Hox", "Irtos", "Kashak", "Meepo", "Molo", "Ohsoss", "Rotom", "Sagin", "Sik", "Sniv", "Taklak", "Tes", "Urak", "Varn",  }
    Leonin.LastNames = []string{  }
    Lexodon.LastNames = []string{  }
    Lizardfolk.LastNames = []string{  }
    Minotaur.LastNames = []string{  }
    Orc.LastNames = []string{  }
    Owlin.LastNames = []string{  }
    Plasmoid.LastNames = []string{  }
    Reborn.LastNames = []string{  }
    Satyr.LastNames = []string{  }
    Shifter.LastNames = []string{  }
    SimicHybrid.LastNames = []string{  }
    Tabaxi.LastNames = []string{  }
    ThriKreen.LastNames = []string{  }
    Tiefling.LastNames = []string{ "Art", "Carrion", "Chant", "Creed", "Despair", "Excellence", "Fear", "Glory", "Hope", "Ideal", "Music", "Nowhere", "Open", "Poetry", "Quest", "Random", "Reverence", "Sorrow", "Temerity", "Torment", "Weary",  }
    Tortle.LastNames = []string{  }
    Triton.LastNames = []string{  }
    Vendalken.LastNames = []string{  }

    Aarakocra.SpecialNames = []string{  }
    Aasimar.SpecialNames = []string{  }
    Autognome.SpecialNames = []string{  }
    Bugbear.SpecialNames = []string{  }
    Centaur.SpecialNames = []string{  }
    Changeling.SpecialNames = []string{  }
    Dhampir.SpecialNames = []string{  }
    Dragonborn.SpecialNames = []string{  }
    Dwarf.SpecialNames = []string{  }
    Elf.SpecialNames = []string{  }
    Fairy.SpecialNames = []string{  }
    Firbolg.SpecialNames = []string{  }
    Genasi.SpecialNames = []string{  }
    Giff.SpecialNames = []string{  }
    Gith.SpecialNames = []string{  }
    Gnome.SpecialNames = []string{  }
    Goblin.SpecialNames = []string{  }
    Goliath.SpecialNames = []string{  }
    HalfElf.SpecialNames = []string{  }
    HalfOrc.SpecialNames = []string{  }
    Halfling.SpecialNames = []string{  }
    Harengon.SpecialNames = []string{  }
    Hexblood.SpecialNames = []string{  }
    Hobgoblin.SpecialNames = []string{  }
    Human.SpecialNames = []string{  }
    Kalashtar.SpecialNames = []string{  }
    Kender.SpecialNames = []string{  }
    Kenku.SpecialNames = []string{  }
    Kobold.SpecialNames = []string{  }
    Leonin.SpecialNames = []string{  }
    Lexodon.SpecialNames = []string{  }
    Lizardfolk.SpecialNames = []string{  }
    Minotaur.SpecialNames = []string{  }
    Orc.SpecialNames = []string{  }
    Owlin.SpecialNames = []string{  }
    Plasmoid.SpecialNames = []string{  }
    Reborn.SpecialNames = []string{  }
    Satyr.SpecialNames = []string{  }
    Shifter.SpecialNames = []string{  }
    SimicHybrid.SpecialNames = []string{  }
    Tabaxi.SpecialNames = []string{ "Arborguard Clan", "Astral Hunters", "Astral Weavers", "Azure Howlers", "Azure Skyriders", "Banyan's Clan", "Bayou Clan", "Bioluminescent Bay Clan", "Blazing Sands Clan", "Brambleclaw Clan", "Briarwood Wanderers", "Canyon Echoes Clan", "Canyonsong Clan", "Cascading Falls Clan", "Cavern Hunters", "Celestial Navigators", "Chasm's Echo Clan", "Claws of the Crimson Moon", "Cliffside Echoes Clan", "Cliffside Sentinels", "Cloud-Chasing Rovers", "Cloudfur Clan", "Cloudpanthers", "Coastwatcher Clan", "Comet Chasers", "Coral Keepers", "Coral Reef Clan", "Crescent Moon Clan", "Crescent Talons", "Crimson Claw Clan", "Crimson Paw Clan", "Crimson Sash Clan", "Crystal Falls Clan", "Crystalwing Clan", "Dawnbringers", "Dawnchasers", "Daybreak Bringers", "Deepwood Dwellers", "Desert Nomads Clan", "Diamondback Clan", "Dreamweavers", "Dune Howlers", "Dune Striders", "Duskstalkers Clan", "Echoing Canyon Clan", "Emberpaw Clan", "Emerald Jungle Clan", "Emerald Sky Striders", "Everdawn Chasers", "Everwatch Clan", "Faelight Dancers", "Fellsong Clan", "Fernbrook Clan", "Fernwind Striders", "Firemane Legion", "Firestorm Clan", "Fleetfoot Clan", "Flowing River Clan", "Foggy Moor Dwellers", "Forest Kin", "Forestheart Clan", "Garnet Guard", "Gentle Grass Clan", "Glaciers Clan", "Gladeguard Clan", "Gleaming River Clan", "Gleaming Scale Clan", "Gossamer Weavers", "Gossamer Wings", "Grassfield Runners", "Grassland Runners", "Grove Guardians", "Hidden Caves Clan", "Hidden Grotto Clan", "Highland Echoes Clan", "Howling Ridge Clan", "Howling Ridgeguard", "Howling Wind Riders", "Hunters", "Indigo Flight", "Indigo Flight Clan", "Isle Whispers Clan", "Jade Falcons", "Jade Seekers", "Jungleborn", "Junglesong Clan", "Labyrinthine Dancers", "Lightningbringers", "Lunar Huntresses", "Marsh Clan", "Meadowleapers", "Mesa Watchers", "Meteor Wardens", "Midnight Whispers", "Mistwalkers", "Moonbeam Weavers", "Moonlight Weavers", "Moonlit Prowlers", "Moonshadow Stalkers", "Moonstone Crusaders", "Moonstone Howlers", "Moonstone Voyagers", "Mossfur Clan", "Mountain Whispers Clan", "Murmuring River Clan", "Nightfall Prowlers", "Nightfall Riders", "Oasis Clan", "Oasis Wardens", "Opal Order", "Peaks Clan", "Pearl Divers Clan", "Pineguard Clan", "Quicksilver Striders", "Rainsong Clan", "Reef Runners", "Reef's Embrace Clan", "Ridgetop Rovers", "Riverwhisperers", "Roaring Volcano Clan", "Ruby Vanguard", "Rushing River Clan", "Rustling Leaves Clan", "Sands Clan", "Sandsingers Clan", "Sandstorm Saviors", "Sapphire Reef Clan", "Savannah Secrets Clan", "Searing Sun Clan", "Shadow Stalkers", "Shadow Strikers", "Shadowy Peak Clan", "Shifting Sands Clan", "Shimmering Dunes Clan", "Shimmerpelt Clan", "Silent Sands Clan", "Silver River Runners", "Skydancer Battalion", "Skyfire Sentinels", "Skyfire Weavers", "Snow-Kissed Clan", "Soulsteel Legion", "Sparkling Glade Clan", "Spiresong Clan", "Stardust Weavers", "Starfall Watchers", "Stargazer Clan", "Starlight Hunters Clan", "Starlight Sentinels", "Starlit Striders", "Storm's Embrace Clan", "Storm's Fury Clan", "Stormchasers", "Stormwhispering Clan", "Sun Hunters", "Sun's Embrace Clan", "Sun-Dappled Glade Clan", "Sun-Kissed Glade Clan", "Sunbeam Hunters", "Sunfire Chasers", "Sunlit Peak Wanderers", "Sunrise Sentinels", "Sunstone Seekers", "Sunstone Sentinels", "Swiftriver Clan", "Talonflight Clan", "Tidal Weavers", "Timber Striders", "Trailblazers", "Twilight Dancers", "Twilight Guardians", "Twilight Weavers", "Umbral Weavers", "Untamed Wilds Clan", "Verdant Grove Clan", "Verdant Legion", "Vigilaunt Peak Clan", "Volcano's Echo Clan", "Whiskered Diplomats", "Whiskered Sentinels", "Whispering Canyon Kin", "Whispering Grasslands Clan", "Whispering Wood Clan", "Windborne Clan", "Windswept Clan", "Windwhisper Clan", "Winterborn Striders", "Woodland Wardens", "Woodlands Clan", "Zenith Seekers", "Zephyr Riders", "Zephyr Striders",  }
    ThriKreen.SpecialNames = []string{  }
    Tiefling.SpecialNames = []string{ "Abandon", "Able", "Absence", "Abstract", "Abundance", "Abyss", "Adept", "Adore", "Affinity", "Agony", "Aid", "Allure", "Alone", "Amaze", "Ambition", "Amity", "Amuse", "Anarchy", "Anchor", "Anger", "Anguish", "Apology", "Aptitude", "Ardent", "Aria", "Arise", "Art", "Ash", "Assurance", "Audacity", "Balance", "Beauty", "Belief", "Benevolent", "Bitter", "Blame", "Blaze", "Blessing", "Bliss", "Blithe", "Bond", "Bravery", "Brazen", "Breezy", "Bright", "Brilliance", "Cacophony", "Calm", "Candor", "Capable", "Care", "Caress", "Carrion", "Casualty", "Caution", "Celerity", "Chance", "Change", "Chaos", "Charade", "Charisma", "Charity", "Charm", "Chastity", "Cheer", "Cherish", "Chime", "Chivalry", "Clandestine", "Clarity", "Clement", "Clever", "Cloud", "Comedy", "Comfort", "Command", "Compassion", "Condolence", "Confide", "Constance", "Contempt", "Content", "Conviction", "Courage", "Covert", "Craven", "Creative", "Creed", "Cryptic", "Curiosity", "Dare", "Darkness", "Darling", "Dart", "Dawn", "Death", "Defiance", "Defile", "Deft", "Delight", "Delirium", "Deliverance", "Dementia", "Derision", "Desire", "Despair", "Destiny", "Destruction", "Devotion", "Diamond", "Dignity", "Diligence", "Discord", "Discovery", "Disdain", "Divine", "Divinity", "Dodge", "Doom", "Doubt", "Dread", "Dream", "Dulcet", "Dusk", "Dust", "Earnest", "Ecstasy", "Edge", "Eloquence", "Elusive", "Ember", "Empathy", "Endure", "Enigma", "Ennui", "Envy", "Epiphany", "Essence", "Esteem", "Eternal", "Ethereal", "Euphoria", "Ever", "Excellence", "Experience", "Failure", "Faith", "Farewell", "Fascination", "Fate", "Favor", "Fear", "Felicity", "Finesse", "Flair", "Flaw", "Flight", "Fluke", "Forsaken", "Fortune", "Frailty", "Free", "Fright", "Future", "Gaiety", "Gallant", "Gamble", "Gem", "Generous", "Gentle", "Gift", "Glee", "Glory", "Golden", "Grace", "Greed", "Grief", "Guile", "Guilt", "Gutter", "Hale", "Harbor", "Hardy", "Harm", "Harmony", "Harvest", "Haste", "Haunted", "Haven", "Havoc", "Hazard", "Heart", "Hearth", "Hero", "Honesty", "Honor", "Hope", "Horror", "Humble", "Hunger", "Hunter", "Hurt", "Idea", "Ideal", "Imagine", "Increase", "Inferno", "Infinity", "Instinct", "Integrity", "Intrepid", "Jaunty", "Joker", "Journey", "Joy", "Jubilee", "Judgment", "Just", "Justice", "Kindness", "Knack", "Magic", "Majesty", "Malevolence", "Martyr", "Mayhem", "Meander", "Melody", "Memory", "Mercy", "Merit", "Merry", "Midnight", "Miracle", "Mirth", "Mistake", "Mockery", "Modesty", "Moral", "Motive", "Muse", "Music", "Mute", "Mystery", "Noble", "Nobody", "Nothing", "Nowhere", "Obscure", "Open", "Pain", "Panache", "Panic", "Pardon", "Parry", "Passion", "Patience", "Peace", "Plague", "Pleasant", "Pleasure", "Poetry", "Power", "Praise", "Precious", "Presence", "Prestige", "Pride", "Principle", "Promise", "Prosper", "Prudence", "Purity", "Purpose", "Pursuit", "Quest", "Question", "Quicken", "Quiet", "Quirk", "Radiance", "Rage", "Rain", "Random", "Ransom", "Rapture", "Rarity", "Raven", "Raze", "Reason", "Rebel", "Recollection", "Refrain", "Regal", "Regret", "Remark", "Remember", "Remorse", "Repentance", "Rescue", "Resent", "Resolve", "Respect", "Rest", "Retreat", "Retribution", "Revel", "Revelation", "Revere", "Reverence", "Revile", "Revolt", "Rhyme", "Riches", "Righteous", "Riot", "Rise", "Risk", "River", "Rotten", "Royal", "Rue", "Rumor", "Rush", "Ruthless", "Sadness", "Saga", "Sage", "Salvation", "Sanctuary", "Sarcasm", "Savage", "Savvy", "Scorn", "Secret", "Serendipity", "Serenity", "Severity", "Shame", "Sharp", "Shelter", "Silence", "Sincerity", "Sly", "Snow", "Soft", "Solace", "Solemn", "Song", "Sorrow", "Spark", "Speedy", "Spirit", "Stellar", "Still", "Storm", "Strength", "Struggle", "Subtle", "Success", "Suspicion", "Swift", "Sympathy", "Talent", "Temerity", "Temperance", "Tempest", "Tenacity", "Tender", "Terror", "Thankful", "Tolerance", "Torch", "Torment", "Tragedy", "Tranquil", "Treachery", "Treason", "Treasure", "Tribute", "Triumph", "True", "Trust", "Turmoil", "Twilight", "Twist", "Umbrage", "Undone", "Union", "Unique", "Unity", "Valiant", "Valor", "Value", "Vanity", "Venture", "Verity", "Vice", "Victor", "Vigil", "Vigor", "Violence", "Virtue", "Visit", "Wait", "Warning", "Warrant", "Wary", "Way", "Wealth", "Weary", "Welcome", "Whisper", "Will", "Wisdom", "Wish", "Wistful", "Wit", "Wonder", "Worth", "Wrath", "Zeal", "Zenith",  }
    Tortle.SpecialNames = []string{  }
    Triton.SpecialNames = []string{  }
    Vendalken.SpecialNames = []string{  }

}
